#pragma once

#include "../engine/String.h"

#define MAKE_COMMAND(cmd) const String cmd( #cmd )

class ICommand
{
	public:
		virtual ~ICommand() = default;

		virtual bool Execute(const String&) = 0;
		virtual const String& GetLastError()const = 0;
};

namespace command
{
	MAKE_COMMAND( EMISSIVE_INTENSITY );
	MAKE_COMMAND( AMBIENT_INTENSITY );
	MAKE_COMMAND( DIFFUSE_INTENSITY );
	MAKE_COMMAND( SPECULAR_INTENSITY );
	MAKE_COMMAND( REFRACTION_INTENSITY );
	MAKE_COMMAND( COLOR_SATURATION );
	MAKE_COMMAND( COLOR_SEPARATION );
	MAKE_COMMAND( EMISSIVE_COLOR_RED );
	MAKE_COMMAND( EMISSIVE_COLOR_GREEN );
	MAKE_COMMAND( EMISSIVE_COLOR_BLUE );
	MAKE_COMMAND( EMISSIVE_COLOR_ALPHA );
	MAKE_COMMAND( AMBIENT_COLOR );
	MAKE_COMMAND( AMBIENT_COLOR_RED );
	MAKE_COMMAND( AMBIENT_COLOR_GREEN );
	MAKE_COMMAND( AMBIENT_COLOR_BLUE );
	MAKE_COMMAND( AMBIENT_COLOR_ALPHA );
	MAKE_COMMAND( DIFFUSE_COLOR );
	MAKE_COMMAND( DIFFUSE_COLOR_RED );
	MAKE_COMMAND( DIFFUSE_COLOR_GREEN );
	MAKE_COMMAND( DIFFUSE_COLOR_BLUE );
	MAKE_COMMAND( DIFFUSE_COLOR_ALPHA );
	MAKE_COMMAND( SPECULAR_COLOR );
	MAKE_COMMAND( SPECULAR_COLOR_RED );
	MAKE_COMMAND( SPECULAR_COLOR_GREEN );
	MAKE_COMMAND( SPECULAR_COLOR_BLUE );
	MAKE_COMMAND( SPECULAR_COLOR_ALPHA );
	MAKE_COMMAND( SPECULAR_COLOR_RGB );
	MAKE_COMMAND( SPECULAR_POWER );
	MAKE_COMMAND( COLOR );
	MAKE_COMMAND( COLOR_RED );
	MAKE_COMMAND( COLOR_GREEN );
	MAKE_COMMAND( COLOR_BLUE );
	MAKE_COMMAND( COLOR_ALPHA );
	MAKE_COMMAND( SHADOW_ENABLED );
	MAKE_COMMAND( SHADOW_BIAS );
	MAKE_COMMAND( SHADOW_DISTANCE_ADJUSTMENT );

	MAKE_COMMAND( LIGHT_RANGE );
	MAKE_COMMAND( LIGHT_INNER_CONE_DEGS );
	MAKE_COMMAND( LIGHT_OUTER_CONE_DEGS );
	MAKE_COMMAND( LIGHT_ATTENUATION_0 );
	MAKE_COMMAND( LIGHT_ATTENUATION_1 );
	MAKE_COMMAND( LIGHT_ATTENUATION_2 );
	MAKE_COMMAND( LIGHT_FLICKER );

	MAKE_COMMAND( TEXTURE_POS );
	MAKE_COMMAND( TEXTURE_POS_U );
	MAKE_COMMAND( TEXTURE_POS_V );
	MAKE_COMMAND( TEXTURE_SCALE );
	MAKE_COMMAND( TEXTURE_SCALE_U );
	MAKE_COMMAND( TEXTURE_SCALE_V );
	MAKE_COMMAND( TEXTURE_ROTATION );
	MAKE_COMMAND( TEXTURE_DIFFUSE );
	MAKE_COMMAND( TEXTURE_SPECULAR );
	MAKE_COMMAND( TEXTURE_NORMAL_MAP );

	MAKE_COMMAND( ENTITY_BLOCK );
	MAKE_COMMAND( ENTITY_DOOR );
	MAKE_COMMAND( ENTITY_PLAYER_SPAWN );
	MAKE_COMMAND( ENTITY_AMBIENT_LIGHT );
	MAKE_COMMAND( ENTITY_POINT_LIGHT );
	MAKE_COMMAND( ENTITY_SPOT_LIGHT );
	MAKE_COMMAND( ENTITY_CAMERA );
	MAKE_COMMAND( ENTITY_CAMERA_TRACK );
	MAKE_COMMAND( ENTITY_TRIGGER_CAMERA );
	MAKE_COMMAND( ENTITY_TRIGGER_COMMAND );
	MAKE_COMMAND( ENTITY_MODEL );
	MAKE_COMMAND( ENTITY_TALK );
	MAKE_COMMAND( ENTITY_MONSTER );
	MAKE_COMMAND( ENTITY_PARTITION );
	MAKE_COMMAND( ENTITY_REFRACTION );
	
	MAKE_COMMAND( GRID_POS );
	MAKE_COMMAND( GRID_SCALE );

	MAKE_COMMAND( DIRECTION );
	MAKE_COMMAND( ROTATION_YAW_DEGS );
	MAKE_COMMAND( ROTATION_PITCH_DEGS );
	MAKE_COMMAND( ROTATION_ROLL_DEGS );
	MAKE_COMMAND( ROTATION_EULER );

	MAKE_COMMAND( TRACK_ID );
	MAKE_COMMAND( TRACK_ID_CONNECTED );
	MAKE_COMMAND( TRACK_POINT0_GRID_POS );
	MAKE_COMMAND( TRACK_POINT1_GRID_POS );

	MAKE_COMMAND( LOCKED );
	MAKE_COMMAND( LOCK_TEXT );
	MAKE_COMMAND( LOCK_TEXT_CLEAR );
	MAKE_COMMAND( OPEN_DIRECTION );
	MAKE_COMMAND( OPEN_AMOUNT );
	MAKE_COMMAND( DOOR_DURATION );
	MAKE_COMMAND( OPEN );
	MAKE_COMMAND( OPEN_STAY );
	MAKE_COMMAND( CLOSE );

	MAKE_COMMAND( MODEL );
	MAKE_COMMAND( NAME );
	MAKE_COMMAND( COMMAND_LINE );
	MAKE_COMMAND( COMMAND_LINE_CLEAR );
	MAKE_COMMAND( EVENT_FIRE_ONCE );
	MAKE_COMMAND( TALK_LINE );
	MAKE_COMMAND( TALK_LINE_CLEAR );

	MAKE_COMMAND( DEBUG_ENTITY_CONTACT );
	MAKE_COMMAND( DEBUG_ADD_ENTITY );
	MAKE_COMMAND( DEBUG_CREATE_PARTITION );

	MAKE_COMMAND( SPAWN );
	MAKE_COMMAND( SPAWN_ON_CREATE );
	MAKE_COMMAND( ACTIVE );
	MAKE_COMMAND( VISIBLE );
	MAKE_COMMAND( NOCLIP );

	String formatFloat(const String& cmd, float value);
	bool isEntity(const String& cmd);
	String serializeCommandList(const String& cmd, const List<String>&);
	String serializeQuoted(const String& cmd, const HashString& name, bool emptyIfNull = true);
	String serializeLine();
	String serializeLine(const String& cmd);
	String serializeLine(const String& cmd, const String& value);
	String formatCommandQuote(const String&);
}

#undef MAKE_COMMAND
